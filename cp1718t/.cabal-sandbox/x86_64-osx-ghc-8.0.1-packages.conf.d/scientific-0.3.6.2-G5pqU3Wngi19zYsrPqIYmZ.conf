name: scientific
version: 0.3.6.2
id: scientific-0.3.6.2-G5pqU3Wngi19zYsrPqIYmZ
key: scientific-0.3.6.2-G5pqU3Wngi19zYsrPqIYmZ
license: BSD3
maintainer: Bas van Dijk <v.dijk.bas@gmail.com>
homepage: https://github.com/basvandijk/scientific
synopsis: Numbers represented using scientific notation
description:
    "Data.Scientific" provides the number type 'Scientific'. Scientific numbers are
    arbitrary precision and space efficient. They are represented using
    <http://en.wikipedia.org/wiki/Scientific_notation scientific notation>.
    The implementation uses a coefficient @c :: 'Integer'@ and a base-10 exponent
    @e :: 'Int'@. A scientific number corresponds to the
    'Fractional' number: @'fromInteger' c * 10 '^^' e@.
    .
    Note that since we're using an 'Int' to represent the exponent these numbers
    aren't truly arbitrary precision. I intend to change the type of the exponent
    to 'Integer' in a future release.
    .
    The main application of 'Scientific' is to be used as the target of parsing
    arbitrary precision numbers coming from an untrusted source. The advantages
    over using 'Rational' for this are that:
    .
    * A 'Scientific' is more efficient to construct. Rational numbers need to be
    constructed using '%' which has to compute the 'gcd' of the 'numerator' and
    'denominator'.
    .
    * 'Scientific' is safe against numbers with huge exponents. For example:
    @1e1000000000 :: 'Rational'@ will fill up all space and crash your
    program. Scientific works as expected:
    .
    >>> read "1e1000000000" :: Scientific
    1.0e1000000000
    .
    * Also, the space usage of converting scientific numbers with huge exponents to
    @'Integral's@ (like: 'Int') or @'RealFloat's@ (like: 'Double' or 'Float')
    will always be bounded by the target type.
category: Data
author: Bas van Dijk
exposed: True
exposed-modules:
    Data.ByteString.Builder.Scientific Data.Scientific
    Data.Text.Lazy.Builder.Scientific
hidden-modules: GHC.Integer.Compat Utils
abi: e2e0a0940ee499170864996c5f972939
trusted: False
import-dirs: "/Users/henriquefaria/Documents/2\186ano/2\186 semestre/CP/Trabalho Pratico/cp1718t/.cabal-sandbox/lib/x86_64-osx-ghc-8.0.1/scientific-0.3.6.2-G5pqU3Wngi19zYsrPqIYmZ"
library-dirs: "/Users/henriquefaria/Documents/2\186ano/2\186 semestre/CP/Trabalho Pratico/cp1718t/.cabal-sandbox/lib/x86_64-osx-ghc-8.0.1/scientific-0.3.6.2-G5pqU3Wngi19zYsrPqIYmZ"
data-dir: "/Users/henriquefaria/Documents/2\186ano/2\186 semestre/CP/Trabalho Pratico/cp1718t/.cabal-sandbox/share/x86_64-osx-ghc-8.0.1/scientific-0.3.6.2"
hs-libraries: HSscientific-0.3.6.2-G5pqU3Wngi19zYsrPqIYmZ
depends:
    base-4.9.0.0 binary-0.8.3.0 bytestring-0.10.8.1 containers-0.5.7.1
    deepseq-1.4.2.0 hashable-1.2.4.0-Ctl752zbguF6QanxurLOm2
    integer-gmp-1.0.0.1
    integer-logarithms-1.0.2.1-JgHVbSmdq3T6w3beQf6Hew
    primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
    text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs
haddock-interfaces: "/Users/henriquefaria/Documents/2\186ano/2\186 semestre/CP/Trabalho Pratico/cp1718t/.cabal-sandbox/share/doc/x86_64-osx-ghc-8.0.1/scientific-0.3.6.2/html/scientific.haddock"
haddock-html: "/Users/henriquefaria/Documents/2\186ano/2\186 semestre/CP/Trabalho Pratico/cp1718t/.cabal-sandbox/share/doc/x86_64-osx-ghc-8.0.1/scientific-0.3.6.2/html"
